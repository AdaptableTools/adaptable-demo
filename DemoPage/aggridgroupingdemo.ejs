<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <title>AdaptableBlotter.JS ag-Grid Demo with grouping</title>
    <!--CSS for the demo-->
    <link href="aggridgroupingdemo.css" rel="stylesheet" />
    <link href="demo.css" rel="stylesheet" />
    <!-- Latest compiled and minified CSS -->
    <link rel="stylesheet" href="ExtLibs/bootstrap/css/bootstrap.min.css">
    <!-- ag-Grid -->
    <script src="ExtLibs/agGrid/ag-grid.min.js"></script>
    <script src="ExtLibs/agGrid/ag-grid-enterprise.min.js"></script>

</head>

<body>
    <nav class="navbar navbar-inverse" style="margin-bottom:5px;">
        <div class="topBar">
            <span>
                &nbsp;&nbsp; &nbsp;&nbsp;
                <img src="http://images8.webydo.com/92/9227175/3958/FB1B6AA0-1649-8F4A-7ED2-1F1B38CCFC1A.png" height="50">
                <h2>&nbsp;&nbsp;AdaptableBlotter.JS - Grouping Demo&nbsp;&nbsp;</h2>
                <img src="http://images8.webydo.com/92/9227175/3958/FB1B6AA0-1649-8F4A-7ED2-1F1B38CCFC1A.png" height="50">
            </span>
        </div>
    </nav>
    <details>
        <summary>Demo details...</summary>
        <h4>A demo of AdaptableBlotter.JS integrating with the first-rate grouping (both column and row) and pivoting capabilities
            of ag-Grid.</h4>
        <p>
            The following properties have been set for the columns in the Dataset (using Microsoft's famous Northwind dummy data dataset)
            <br/> 3 columns have
            <b>row grouping</b> applied on them: <i>Ship Country</i> (on by default), <i>Employee</i> and <i>Ship Via</i> 
            <br/> 2 columns have
            <b>aggregation</b> applied (both 'sum') and so can be used in pivoting: <i>Freight</i> and <i>Item Count</i> 
            <br/> 3 sets of
            <b>column groups</b> have been created (this is where columns are 'banded' together and cannot be separated from
            each other): <i>Customer Info</i>, <i>Order</i>, and <i>Shipping Details</i> 
            <br/>All the many Adaptable Blotter functions continue to work the same regardless of whether the grid is in normal, grouped or pivoting mode.
            <br/>
        </p>
    </details>

    <script>
        function saveData() {
            var datasetElement = document.getElementById("dataset_select");
            localStorage.setItem(datasetElement.id, datasetElement.value);
        }
    </script>
    <!-- Adaptable Blotter div for react and dashboard -->
    <div id="content"></div>
    <p/>
    <!-- Grid div -->
    <div id="grid" class="ag-blue"></div>
    <% if (htmlWebpackPlugin.options.harnessJs) { %>
        <script src="<%= htmlWebpackPlugin.options.harnessJs %>" type="text/javascript"></script>
        <% } %>
            <% if (htmlWebpackPlugin.options.demoJs) { %>
                <script src="<%= htmlWebpackPlugin.options.demoJs %>" type="text/javascript"></script>
                <% } %>
                    <script>
                        var blotter = new aggridgroupingdemo.agGridGroupingDemo("grid", "content")
                    </script>
</body>

</html>